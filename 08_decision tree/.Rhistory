)
cm <- cm %>% mutate(
"n" = rowSums (cm, na.rm = FALSE, dims = 5)
)
cm <- cm %>% mutate(
"n" = rowSums (cm, na.rm = FALSE, dims = 6)
)
cm <- cm %>% mutate(
"n" = sum(cm[1])
)
cm <- cm %>% mutate(
"n" = sum(cm[,1])
)
cm <- cm %>% mutate(
"n" = sum(cm[1,])
)
cm <- cm %>% mutate(
"n" = sum(cm[1,1])
)
cm <- cm %>% mutate(
"n" = sum(cm[2,1])
)
cm <- cm %>% mutate(
"n" = sum(cm[,c(1:4)])
)
cm <- cm %>% mutate(
"n" = sum(cm[1,c(1:4)])
)
cm <- cm %>% mutate(
"n" = sum(cm[,c(1:4)])
)
cm <- cm %>% mutate(
"n" = sum(cm[,])
)
?sum
cm <- cm %>% mutate(
"n" = sum(cm[c(1:4),])
)
cm <- cm %>% mutate(
"n" = sum(cm[c(1:3),])
)
cm <- cm %>% mutate(
"n" = sum(cm[,c(1:3)])
)
cm <- cm %>% mutate(
"n" = sum(cm[,1])
)
cm <- cm %>% mutate(
"n" = sum(cm[1,])
)
cm <- cm %>% mutate(
"n" = sum(cm[1:4,])
)
cm <- cm %>% mutate(
"n" = sum(cm[,1:4])
)
cm[,2]
cm[1,]
cm[1:4,]
cm[,1:4]
cm[1,1:4]
cm <- cm %>% mutate(
"n" = sum(cm[1,1:4],cm[2,1:4],cm[3,1:4])
)
cm <- model_infos_eval[, c(14:17)]
cm <- cm %>% mutate(
"n" = sum(cm[1,1:4],cm[2,1:4],cm[3,1:4])
)
cm[2,1:4]
cm <- cm %>% mutate(
"n" = sum(cm[1,1:4])
)
cm <- cbind(cm, "n" = rowSums(cm))
cm <- model_infos_eval[, c(14:17)]
cm <- cbind(cm, "n" = rowSums(cm))
cm <- cbind(
cm,
"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n$))
)
cm <- cbind(
cm,
"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n$))
)
cm <- cbind(
cm,
#"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n$))
)
cm <- cbind(
cm,
"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n))
)
cm <- model_infos_eval[, c(14:17)]
cm <- cbind(
cm,
"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n))
)
cm <- model_infos_eval[, c(14:17)]
cm <- cbind(
cm,
"n" = rowSums(cm),
"rTP" = (cm$TP/(cm$n))
)
cm <- cbind(
cm,
"n" = rowSums(cm)
#"rTP" = (cm$TP/(cm$n))
)
cm <- cbind(cm, "rTP" = (cm$TP/(cm$n)) )
cm <- model_infos_eval[, c(14:17)]
cm <- cbind(
cm,
"n" = rowSums(cm)
#"rTP" = (cm$TP/(cm$n))
)
cm <- cbind(
cm,
"rTP" = (cm$TP/(cm$n)),
"rTN" = (cm$TN/(cm$n)),
"rFP" = (cm$FP/(cm$n)),
"rFN" = (cm$FN/(cm$n))
)
print(
xtable(
x = cm,
caption = "DT: DKM Model Confusion Matrix",
label = "table:dtModelCM",
auto = TRUE,
digits = 3
)
dataset <- read.csv(
file = "~/Desktop/Masterarbeit_local/03_linearization/02_output/dataset_lin_1_dt.csv",
sep = ";"
)
View(dataset)
View(cm)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
print("Script Start:")
print(Sys.time())
library(caret)      # e.g. for confusion matrix
library(dplyr)      # data wrangling
library(CORElearn)  # data mining system
library(xtable)     # LaTex
dataset <- read.csv(
file = "~/Desktop/Masterarbeit_local/03_linearization/02_output/dataset_lin_1_dt.csv",
sep = ";"
)
preparation <- function(dataset = dataset){
dataset <- dataset[2:ncol(dataset)]
dataset <- dataset %>%
mutate(
success = as.factor(success),
staat_d = as.factor(staat_d),
sex_m = as.factor(sex_m)
)
return(dataset)
}
dataset <- preparation(dataset)
rm(preparation)
est <- 14
set.seed(2)
flag <- TRUE
print("Start:")
print(Sys.time())
for (j in est){
method = toString(infoCore(what = "attrEval")[j])
print(method)
# normal CV
ncases <- nrow(dataset)
ind <- ceiling(10*(1:ncases)/ncases)
ind <- sample(ind,length(ind))
pred <- rep(NA,ncases)
fit <- NULL
# run 10-fold cross validation
for (i in unique(ind)) {
# Delete the previous model, if there is one.
fit <- CoreModel(
f = success ~ .,
data = dataset[ind!=i,],
model= "tree",
selectionEstimator = infoCore(what = "attrEval")[j],
modelType = 2 # 1 = majority class, 2 = KNN, 3 = KNN kernel, 4 = naive bayes
)
pred[ind==i] <- predict(
fit,
dataset[ind==i,],
type="class" # options:
)
if (!is.null(fit)) destroyModels(fit) # dispose model no longer needed
}
# fit predicted vaules: 1 -> 0, 2 -> 1
pred <- as.data.frame(pred) %>%
mutate(pred = ifelse(pred == 1, 0, 1))
# create table with confusion matrix information
cm <- confusionMatrix(data = pred$pred, dataset$success)
core_eval <- modelEval(
model = fit,
correctClass = dataset$success,  # dataset$success
predictedClass = pred$pred
)
list <- data.frame(
"Method" = infoCore(what = "attrEval")[j],
"AUC" = core_eval$AUC,
"avg cost" = core_eval$averageCost,
"ACC" = cm$overall["Accuracy"],
"P-Value" = cm$overall["AccuracyPValue"],
"FAL" = cm$table[1,2] / (cm$table[1,2] + cm$table[2,2]),
"SEN" = cm$byClass["Sensitivity"],
"SPE" = cm$byClass["Specificity"],
"PRE" = cm$byClass["Precision"],
"F1" = cm$byClass["F1"],
"F1,414" = 3*cm$byClass["Precision"]*cm$byClass["Sensitivity"] /
(2*cm$byClass["Precision"] + cm$byClass["Sensitivity"]),
"F2" = 5*cm$byClass["Precision"]*cm$byClass["Sensitivity"] /
(4*cm$byClass["Precision"] + cm$byClass["Sensitivity"]),
"KAP" = cm$overall["Kappa"],
"TP" = cm$table[1,1],
"TN" = cm$table[2,2],
"FP" = cm$table[1,2],
"FN" = cm$table[2,1]
)
if(flag){
cm_table <- data.frame(list)
} else {
cm_table <- bind_rows(cm_table, list[1,])
}
flag <- FALSE
}
print("End:")
print(Sys.time())
path <- "~/Desktop/Masterarbeit_local/08_decision tree/02_output/"
write.table(
cm_table,
file = paste(path, "final_dt_model_infos_exam_1.csv", sep = ""),
sep = ";",
dec = ",",
row.names = FALSE
)
x_method_infos <- xtable(
x = cm_table[, c(1, 4:10, 12:13)],
caption = "DT: Estimator Evaluation",
label = "table:dtMethodInfos",
auto = TRUE,
digits = 3
)
x_cm_results <- xtable(
x = cm_table[, c(1, 14:17)],
caption = "DT: Method Confusion Matrix",
label = "table:dtEstimatorEvaluation",
auto = TRUE,
digits = 3
)
print(x_method_infos, include.rownames=FALSE)
print(x_cm_results, include.rownames=FALSE)
rm(path)
final_exam_1_model <- fit
final_exam_1_predictions <- pred
final_exam_1_cmtable <-cm_table
print("Script End:")
print(Sys.time())
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
dataset <- read.csv(
file = "~/Desktop/Masterarbeit_local/02_preanalysis/02_output/dataset_mean_1.csv",
sep = ";"
)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_mean1_final model.R', echo=TRUE)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
View(model_infos_eval)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_mean2_final model.R', echo=TRUE)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.03_mean3_final model.R', echo=TRUE)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
save.image("~/Desktop/Masterarbeit_local/08_decision tree/final_envir_all models.RData")
model_infos_eval <- rbind(
"1EN" = final_exam_1_cmtable,
"2EN" = final_exam_2_cmtable,
"3EN" = final_exam_3_cmtable,
"1MN" = final_mean_1_cmtable,
"2MN" = final_mean_2_cmtable,
"3MN" = final_mean_3_cmtable
)
print(
xtable(
x = model_infos_eval[, c(4:10, 12:13)],
caption = "DT: DKM Model Evaluation",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
library(caret)      # e.g. for confusion matrix
library(dplyr)      # data wrangling
library(CORElearn)  # data mining system
library(xtable)     # LaTex
model_infos_eval <- rbind(
"1EN" = final_exam_1_cmtable,
"2EN" = final_exam_2_cmtable,
"3EN" = final_exam_3_cmtable,
"1MN" = final_mean_1_cmtable,
"2MN" = final_mean_2_cmtable,
"3MN" = final_mean_3_cmtable
)
print(
xtable(
x = model_infos_eval[, c(4:10, 12:13)],
caption = "DT: DKM Model Evaluation",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
View(model_infos_eval)
model_infos_eval <- rbind(
"3EN" = final_exam_3_cmtable,
"3CN" = final_mean_3_cmtable,
"2EN" = final_exam_2_cmtable,
"2CN" = final_mean_2_cmtable,
"1EN" = final_exam_1_cmtable,
"1CN" = final_mean_1_cmtable
)
View(model_infos_eval)
print(
xtable(
x = model_infos_eval[, c(4:10, 12:13)],
caption = "DT: DKM Model Evaluation",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
cm <- model_infos_eval[, c(14:17)]
View(cm)
cm <- cbind(
cm,
"n" = rowSums(cm)
#"rTP" = (cm$TP/(cm$n))
)
cm <- cbind(
cm,
"rTP" = (cm$TP/(cm$n)),
"rTN" = (cm$TN/(cm$n)),
"rFP" = (cm$FP/(cm$n)),
"rFN" = (cm$FN/(cm$n))
)
print(
xtable(
x = cm,
caption = "DT: DKM Model Confusion Matrix",
label = "table:dtModelCM",
auto = TRUE,
digits = 3
)
final_mean_1_model
final_mean_1_model$model
save.image("~/Desktop/Backup/08_decision tree/LATEST ENVIR.RData")
dataset <- read.csv(
file = "~/Desktop/Masterarbeit_local/03_linearization/02_output/dataset_lin_1.csv",
sep = ";"
)
View(dataset)
rm(list = ls()) # clear workspace (optional)
library(caret)      # e.g. for confusion matrix
library(dplyr)      # data wrangling
library(CORElearn)  # data mining system
library(xtable)     # LaTex
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_exam1_final model.R')
View(cm_table)
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_exam2_final model.R')
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
2EN <- 5
2en <- 5
rm(list = ls()) # clear workspace (optional)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_exam1_final model.R')
rm(cm_table, dataset, list, model_exam_2_predictions, pred, x_cm_results, x_method_infos,
cm, core_eval, est, fit, flag, i, ind, j, method, model_exam_2_FINAL, ncases, path)
final_1EN_predictions <- final_1EN_1_predictions
final_1EN_cmtable <-final_1EN_1_cmtable
rm(final_1EN_1_predictions,final_1EN_1_cmtable)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_exam2_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.03_exam3_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_mean1_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_mean2_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.03_mean3_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_exam2_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/83.00_eval.R')
View(model_infos_eval)
path <- "~/Desktop/Masterarbeit_local/08_decision tree/02_output/"
write.table(
model_infos_eval,
file = paste(path, "final_dt_model comparison", sep = ""),
sep = ";",
dec = ",",
row.names = FALSE
)
rm(path)
rm(data_codes)
library(caret)      # e.g. for confusion matrix
library(dplyr)      # data wrangling
library(CORElearn)  # data mining system
infoCore(what = "attrEval")
infoCore(what = "attrEval")[34]
save.image("~/Desktop/Masterarbeit_local/08_decision tree/DKM_envir_backup.RData")
rm(list = ls()) # clear workspace (optional)
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_exam1_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.01_mean1_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_exam2_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.02_mean2_final model.R')
source('~/Desktop/Masterarbeit_local/08_decision tree/82.03_exam3_final model.R')
warnings()
source('~/Desktop/Masterarbeit_local/08_decision tree/82.03_mean3_final model.R')
library(caret)      # e.g. for confusion matrix
library(dplyr)      # data wrangling
library(CORElearn)  # data mining system
library(xtable)     # LaTex
model_infos_eval <- rbind(
"3EN" = final_3EN_cmtable,
"3CN" = final_3CN_cmtable,
"2EN" = final_2EN_cmtable,
"2CN" = final_2CN_cmtable,
"1EN" = final_1EN_cmtable,
"1CN" = final_1CN_cmtable
)
View(model_infos_eval)
data_codes <- data.frame("Data" = row.names(model_infos_eval))
model_infos_eval <- cbind(data_codes, model_infos_eval)
print(
xtable(
x = model_infos_eval[, c(5:11, 13:14)],
caption = "DT: DT Model Evaluation",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
View(model_infos_eval)
print(
xtable(
x = model_infos_eval[, c(5:6, 8:11, 13:14)],
caption = "DT: DT Model Evaluation",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
cm <- model_infos_eval[, c(15:18)]
View(cm)
cm <- cbind(
cm,
"n" = rowSums(cm[1:4])
#"rTP" = (cm$TP/(cm$n))
)
cm <- cbind(
cm,
"rTP" = (cm$TP/(cm$n)),
"rTN" = (cm$TN/(cm$n)),
"rFP" = (cm$FP/(cm$n)),
"rFN" = (cm$FN/(cm$n))
)
print(
xtable(
x = model_infos_eval[, c(15:18)],
caption = "DT: Model Confusion Matrix, estimator: HDDT distance",
label = "table:dtModelCM",
auto = TRUE,
digits = 3
)
rm(cm)
path <- "~/Desktop/Masterarbeit_local/08_decision tree/02_output/"
write.table(
model_infos_eval,
file = paste(path, "final_dt_model comparison", sep = ""),
sep = ";",
dec = ",",
row.names = FALSE
)
write.table(
model_infos_eval,
file = paste(path, "final_dt_model comparison.csv", sep = ""),
sep = ";",
dec = ",",
row.names = FALSE
)
View(model_infos_eval)
rm(data_codes)
print(
xtable(
x = model_infos_eval[, c(15:18)],
caption = "DT: Model Confusion Matrix, estimator: HDDT distance",
label = "table:dtModelCM",
auto = TRUE,
digits = 3
)
print(
xtable(
x = model_infos_eval[, c(5:6, 8:11, 13:14)],
caption = "DT: Model Evaluation, estimator: HDDT distance",
label = "table:dtModelEval",
auto = TRUE,
digits = 3
)
source('~/Desktop/Code Abgabe/08_decision tree/82.02_exam2_final model.R')
