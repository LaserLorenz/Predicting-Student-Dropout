size = 1.5
) +
scale_color_manual(
breaks = c("0", "1"),
values=c("#EC7063", "#3498DB"),
labels=c("Drop-out", "Success")
) +
coord_cartesian(
xlim = c(1, 5),
ylim = c(0, 15)
) +
labs(
# title = "All students: Note vs. be vs. success",
x = "Average result (note)",
y = "Count of passed examinations per semester",
colour = "Result"
)  +
annotate(
"text",
x = 4.5,
y = 15,
label = "Jittered plot"
)+
theme_bw()
plot(my_plot)
plot_data <- dataset_mean_all %>%
filter(
(be_count/sem_max)< 15
)
my_plot <- ggplot(
plot_data,
aes(
x = note_avg,
y = (be_count/sem_max),
color = as.factor(success)
)
) +
geom_point(
alpha = 0.5,
size = 2
) +
scale_color_manual(
breaks = c("0", "1", "2"),
values = c("#BDC3C7", "#909497", "#82E0AA"),
labels = c("Drop-out", "Success", "Enrolled")
) +
coord_cartesian(
xlim = c(1, 5),
ylim = c(0, 15)
) +
labs(
#title = "All students: Note vs. be vs. success",
x = "Average result (note)",
y = "Count of passed examinations per semester",
colour = "Result"
) +
annotate(
"text",
x = 4.5,
y = 15,
label = "Jittered plot"
) +
theme_bw()
plot(my_plot)
plot_data <- dataset %>%
filter(
sem <= 2
) %>%
group_by(
id
) %>%
summarise(
success = mean(success),
p_count = n(),
note_avg = mean(pnote),
sem_max = max(sem),
be_count = sum(pstatus == 1),
nb_count = sum(pstatus == 2),
en_count = sum(pstatus == 3)
) %>%
filter(
(be_count/sem_max) < 15 & success != 2
)
my_plot <- ggplot(
plot_data,
aes(
x = note_avg,
y = (be_count/sem_max),
color = as.factor(success)
)
) +
geom_point(
alpha = 0.5,
size = 1.5,
position = "jitter"
) +
scale_color_manual(
breaks = c("0", "1"),
values=c("#EC7063", "#3498DB"),
labels=c("Drop-out", "Success")
) +
coord_cartesian(
xlim = c(1, 5),
ylim = c(0, 15)
) +
labs(
# title = "Students within first/second sem: Note vs. be vs. success",
x = "Average result (note)",
y = "Count of passed examinations per semester",
colour = "Result"
) +
annotate(
"text",
x = 4.5,
y = 15,
label = "Jittered plot"
) +
theme_bw()
plot(my_plot)
plot_data <- dataset_idsem %>%
filter(
sem <= 2
) %>%
group_by(
id
) %>%
summarise(
success = mean(success),
note_avg = mean(note_avg),
be_count = sum(be_count),
sem_max = max(sem)
)
my_plot <- ggplot(
plot_data,
aes(
x = note_avg,
y = (be_count/sem_max),
color = as.factor(success)
)
) +
geom_point(
alpha = 0.5,
size = 2,
position = "jitter"
) +
scale_color_manual(
breaks = c("0", "1", "2"),
values = c("#BDC3C7", "#909497", "#82E0AA"),
labels = c("Drop-out", "Successfull", "Enrolled")
) +
coord_cartesian(
xlim = c(1, 5),
ylim = c(0, 15)
) +
labs(
#title = "Students within first/second sem: Note vs. be vs. success",
x = "Average result (note)",
y = "Count of passed examinations per semester",
colour = "Result") +
annotate(
"text",
x = 4.5,
y = 15,
label = "Jittered plot"
) +
theme_bw()
plot(my_plot)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
)
my_plot <- ggplot(data = quit) +
geom_point(aes(x = quit$sem_max, y = quit$sum, color = "Aggregated")) +
geom_point(aes(x = quit$sem_max, y = quit$count, color = "Total")) +
#geom_point(aes(x = quit$sem_max, y = quit$avg_note, color = "Avg_note *100")) +
scale_x_continuous(breaks=c(1,3,5,7,9,11)) +
xlab("Semester") +
ylab("No. of drop-out students") +
labs(colour = "") +
theme_bw()
plot(my_plot)
View(quit)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
)
my_plot <- ggplot(data = quit) +
geom_point(aes(x = quit$sem_max, y = quit$sum, color = "Aggregated")) +
geom_bar(aes(x = quit$sem_max, y = quit$count, color = "Total")) +
#geom_point(aes(x = quit$sem_max, y = quit$avg_note, color = "Avg_note *100")) +
scale_x_continuous(breaks=c(1,3,5,7,9,11)) +
xlab("Semester") +
ylab("No. of drop-out students") +
labs(colour = "") +
theme_bw()
plot(my_plot)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
) %>% order(
sem_max
)
View(quit)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
) %>% order(
decreasing = TRUE,
sem_max
)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
) %>% order(
sem_max,
decreasing = TRUE
)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
) %>% order(
sem_max
)
View(quit)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
) %>% order(
sem_max,
decreasing = TRUE
)
library(ggplot2)
library(dplyr)
build_mean_ds <- function(data = dataset, sem_max = data$sem){
# filter semester > sem_max, success != 2, replace pstatus
ds <- dataset %>%
filter(
sem <= sem_max,
success != 2
) %>%
mutate(
pstatus = replace(
pstatus,
pstatus == 3,
2
)
# extract features
ds <- ds %>%
group_by(
id
) %>%
summarise(
success = mean(success),
sex_m = mean(sex_m),
staat_d = mean(staat_d),
age = mean(age),
p_count = n(),
note_avg = mean(pnote),
sem_max = max(sem),
be_count = sum(pstatus == 1),
nb_count = sum(pstatus == 2)
)
return(ds)
}
exam_analysis <- function(dataset, sem_filter = dataset$sem){
# remove data from sem > sem_filter
# remove active students
dataset <- dataset %>%
filter(
success != 2,
sem <= sem_filter
)
# keep only latest try of each exam per student (function from linearization)
dataset <- dataset %>%
group_by(
id, pnr
) %>%
arrange(
sem
) %>%
filter(
row_number() == n()
)
# create two datasets:
# sucess == 1 / 0
# keep exam if #observations >= 15
dataset_1 <- subset(dataset, dataset$success == 1) %>%
group_by(pnr) %>%
summarise(count = n()) %>%
filter(count >= 15)
dataset_0 <- subset(dataset, dataset$success == 0) %>%
group_by(pnr) %>%
summarise(count = n()) %>%
filter(count >= 15)
# merge datasets: keep only if pnr exists in both
# 29 exams (-167)
dataset_exam <- semi_join(dataset_1, dataset_0, by = "pnr")
return(dataset_exam)
}
dataset <- read.csv(
file = "~/Desktop/Masterarbeit_local/01_database preparation/02_output/dataset.csv",
sep = ";"
)
print("Import data from database preparation")
dataset <- dataset %>%
mutate(
anfdat = as.Date(anfdat)
)
print("Remove irrelevant information from dataset")
dataset <- dataset[, c(1,15,5:7,9,11,14,10,12)]
dataset_mean_3 <- build_mean_ds(data = dataset, sem_max = 3)
dataset_mean_2 <- build_mean_ds(data = dataset, sem_max = 2)
dataset_mean_1 <- build_mean_ds(data = dataset, sem_max = 1)
dataset_idsem <- dataset %>%
group_by(
id,
sem,
sex_m,
success,
staat_d,
age
) %>%
summarise(
p_count = n(),
note_avg = mean(pnote),
be_count = sum(pstatus == 1),
nb_count = sum(pstatus == 2),
en_count = sum(pstatus == 3)
)
dataset_idsem <- dataset_idsem[,c(1, 3:8, 2, 9:11)]
dataset_mean_all <- build_mean_ds(dataset)
quit <- dataset %>%
filter(
success == 0
) %>%
group_by(
id
) %>%
summarise(
sem_max = max(sem),
avg_note = mean(pnote)
) %>%
group_by(
sem_max
) %>%
summarise(
count = n(),
avg_note = mean(avg_note*100)
) %>%
arrange(
desc(sem_max)
) %>%
mutate(
sum = cumsum(count)
)
my_plot <- ggplot(data = quit) +
geom_point(aes(x = quit$sem_max, y = quit$sum, color = "Aggregated")) +
geom_point(aes(x = quit$sem_max, y = quit$count, color = "Total")) +
#geom_point(aes(x = quit$sem_max, y = quit$avg_note, color = "Avg_note *100")) +
scale_x_continuous(breaks=c(1,3,5,7,9,11)) +
xlab("Semester") +
ylab("No. of drop-out students") +
labs(colour = "") +
theme_bw()
plot(my_plot)
spath <- "~/Desktop/Masterarbeit_local/50_extra/"
write.table(
quit,
file = paste(spath, "quit.csv", sep = ""),
sep = ";",
row.names = FALSE
)
